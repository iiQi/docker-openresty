name: build

on:
  schedule:
    - cron: 0 6 * * 0
  workflow_dispatch:
    inputs:
      version:
        description: '指定编译版本。不填默认获取最新。'
        default: ''
        required: false
        type: string

permissions:
  packages: write

jobs:
  prepare:
    name: Prepare
    runs-on: "ubuntu-latest"
    outputs:
      buildConfig: ${{ steps.prepare.outputs.buildConfig }}
      syncConfig: ${{ steps.prepare.outputs.syncConfig }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Prepare
        id: prepare
        run: |
          registries="${{ vars.REGISTRIES }}"
          version="${{ github.event.inputs.version  }}"
          flavors="${{ vars.FLAVORS }}"
          
          . tools/prepare.sh

          echo buildConfig="$buildConfig" >> $GITHUB_OUTPUT
          echo syncConfig="$syncConfig" >> $GITHUB_OUTPUT

  build:
    name: Build PHP ${{ matrix.version }}-${{ matrix.flavor }}
    runs-on: "ubuntu-latest"
    needs:
      - prepare
    strategy:
      matrix:
        include: ${{ fromJSON(needs.prepare.outputs.buildConfig) }}
      fail-fast: false
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Docker login Build Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ matrix.registry }}
          username: ${{ secrets[matrix.username] }}
          password: ${{ secrets[matrix.password] }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug

      - name: Build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          platforms: ${{ vars.BUILD_PLATFORMS }}
          pull: true
          push: true
          cache-from: type=gha,scope=${{ matrix.version }}-${{ matrix.flavor }}
          cache-to: type=gha,mode=max,scope=${{ matrix.version }}-${{ matrix.flavor }}
          build-args: |
            VERSION=${{ matrix.version }}
            FLAVOR=${{ matrix.flavor }}

          tags: |
            ${{ steps.config.outputs.tags }}

  sync:
    name: Sync To ${{ matrix.registry }}
    runs-on: "ubuntu-latest"
    needs:
      - prepare
      - build
    strategy:
      matrix:
        include: ${{ fromJSON(needs.prepare.outputs.syncConfig) }}
      fail-fast: false

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Docker login ${{ matrix.registry }}
        uses: docker/login-action@v3
        with:
          registry: ${{ matrix.registry }}
          username: ${{ secrets[matrix.username] }}
          password: ${{ secrets[matrix.password] }}

      - name: Sync images
        run: |
          set -eux
          registry='${{ matrix.registry }}'
          image='${{ matrix.image }}'
          sync='${{ matrix.sync }}'
          
          . tools/sync.sh